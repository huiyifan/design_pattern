
代理模式 Proxy Pattern 中, 一个类代表另一个类的功能。 这种类型的设计模式属于结构型模式.

应用场景:
买火车票，不用直接把钱交给国家火车财务中心，只需要找到中间代理人-火车售票窗口/12306

主要优点:
1. 代理模式在客户端与目标对象之间起到一个中介作用和保护目标对象的作用;
2. 代理模式可以拓展目标对象的功能;
3. 代理模式能将客户端与目标对象分离，在一定程度上降低系统的耦合度，增加了程序的可拓展性

主要缺点:
1. 代理模式会造成系统设计中类的数量增加
2. 在客户端和目标对象之间增加一个代理对象
3. 增加了系统的复杂度

// 模式结构:
1. 抽象主题(Subject)类: 通过接口或抽象类声明真实主题和代理对象实现的业务方法
2. 真实主题(Real Subject)类: 实现了抽象主题中的具体业务, 是代理对象所代表的真是对象，是最终要引用的对象。
3. 代理(Proxy)类: 提供了与真实主题相同的接口，其内部含有对真实主题的引用，它可以访问，控制或拓展真实主题的功能。

