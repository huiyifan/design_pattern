
桥接模式 (Bridge 模式)

在现实生活中, 某些类具有两个或多个维度的变化, 如图形即可按形状分, 又可按颜色分。
如果用继承的方式, m中形状和n种颜色的图形就有m*n种，不但对应的子类很多,而且拓展困难.

桥接模式定义:
将抽象与实现分离, 使它们可以独立变化。它是用组合关系代替继承关系来实现，从而降低了
抽象和实现这两个可变维度的耦合度。

桥接模式优点:
. 抽奖与实现分离, 拓展能力强
. 符合开闭原则
. 符合合成复用原则
. 其实现细节对客户透明

缺点:
  由于是聚合关系建立在抽象层, 要求开发者针对抽象化进行设计与编程, 能正确地识别系统中两个独立变化的维度,
这增加了系统的理解与设计难度.

桥接模式的结构与实现
一. 模式的结构
桥接模式包含以下主要角色.
1. 抽象化(Abstraction)角色: 定义抽象类, 并包含一个对实现化对象的引用。
2. 拓展抽象化(Refined Abstraction)角色: 是抽象化角色的子类, 实现父类中的业务方法,
并且通过组合关系条用实现角色中的业务方法。
3. 实现化(Implementor)角色: 定义实现化角色的接口, 供扩展抽象化角色调用。
4. 具体实现化(Concrete Implementror)角色: 给出实现化角色接口的具体实现。

